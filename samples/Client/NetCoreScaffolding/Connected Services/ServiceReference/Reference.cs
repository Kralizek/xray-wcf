//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://localtest.me/")]
    public partial class Contact : object
    {
        
        private string FirstNameField;
        
        private System.Guid IdField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localtest.me/", ConfigurationName="ServiceReference.IService")]
    public interface IService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localtest.me/IService/ReturnsNull", ReplyAction="http://localtest.me/IService/ReturnsNullResponse")]
        System.Threading.Tasks.Task<ServiceReference.ReturnsNullResponse> ReturnsNullAsync(ServiceReference.ReturnsNullRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localtest.me/IService/ThrowSomething", ReplyAction="http://localtest.me/IService/ThrowSomethingResponse")]
        System.Threading.Tasks.Task<ServiceReference.ThrowSomethingResponse> ThrowSomethingAsync(ServiceReference.ThrowSomethingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localtest.me/IService/ReturnsSomething", ReplyAction="http://localtest.me/IService/ReturnsSomethingResponse")]
        System.Threading.Tasks.Task<ServiceReference.ReturnsSomethingResponse> ReturnsSomethingAsync(ServiceReference.ReturnsSomethingRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnsNull", WrapperNamespace="http://localtest.me/", IsWrapped=true)]
    public partial class ReturnsNullRequest
    {
        
        public ReturnsNullRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnsNullResponse", WrapperNamespace="http://localtest.me/", IsWrapped=true)]
    public partial class ReturnsNullResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localtest.me/", Order=0)]
        public ServiceReference.Contact ReturnsNullResult;
        
        public ReturnsNullResponse()
        {
        }
        
        public ReturnsNullResponse(ServiceReference.Contact ReturnsNullResult)
        {
            this.ReturnsNullResult = ReturnsNullResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ThrowSomething", WrapperNamespace="http://localtest.me/", IsWrapped=true)]
    public partial class ThrowSomethingRequest
    {
        
        public ThrowSomethingRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ThrowSomethingResponse", WrapperNamespace="http://localtest.me/", IsWrapped=true)]
    public partial class ThrowSomethingResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localtest.me/", Order=0)]
        public ServiceReference.Contact ThrowSomethingResult;
        
        public ThrowSomethingResponse()
        {
        }
        
        public ThrowSomethingResponse(ServiceReference.Contact ThrowSomethingResult)
        {
            this.ThrowSomethingResult = ThrowSomethingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnsSomething", WrapperNamespace="http://localtest.me/", IsWrapped=true)]
    public partial class ReturnsSomethingRequest
    {
        
        public ReturnsSomethingRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnsSomethingResponse", WrapperNamespace="http://localtest.me/", IsWrapped=true)]
    public partial class ReturnsSomethingResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localtest.me/", Order=0)]
        public ServiceReference.Contact[] ReturnsSomethingResult;
        
        public ReturnsSomethingResponse()
        {
        }
        
        public ReturnsSomethingResponse(ServiceReference.Contact[] ReturnsSomethingResult)
        {
            this.ReturnsSomethingResult = ReturnsSomethingResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IServiceChannel : ServiceReference.IService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ServiceReference.IService>, ServiceReference.IService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference.ReturnsNullResponse> ReturnsNullAsync(ServiceReference.ReturnsNullRequest request)
        {
            return base.Channel.ReturnsNullAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.ThrowSomethingResponse> ThrowSomethingAsync(ServiceReference.ThrowSomethingRequest request)
        {
            return base.Channel.ThrowSomethingAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.ReturnsSomethingResponse> ReturnsSomethingAsync(ServiceReference.ReturnsSomethingRequest request)
        {
            return base.Channel.ReturnsSomethingAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IService))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/");
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IService))
            {
                return new System.ServiceModel.EndpointAddress("net.tcp://localhost:8001/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService,
            
            NetTcpBinding_IService,
        }
    }
}
